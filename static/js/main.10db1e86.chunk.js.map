{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","src","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItems","topic","photoUrl","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltIcon","ChatBubbleOutlineIcon","ShareIcon","SendIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","defaultValue","onChange","e","target","value","preventDefault","add","nanoid","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","catch","error","alert","createUserWithEmailAndPassword","updateProfile","photoURL","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10db1e86.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React from 'react'\nimport './HeaderOption.css'\nimport { Avatar } from '@mui/material'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\n\nfunction HeaderOption({avatar, Icon, title, onClick }) {\n    const user = useSelector(selectUser)\n\n\n    return (\n        <div onClick={onClick} className=\"headerOption\">\n            {Icon && <Icon className='headerOption__icon'/>}\n            {avatar && (\n                <Avatar className=\"headerOption__icon\">{user?.email[0]}</Avatar>\n            )}\n            <h3 className='headerOption__title'>{title}</h3>\n        </div>\n    )\n}\n\nexport default HeaderOption\n","import firebase from 'firebase'\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBSnY4JK4-8WpZJF4OozVcfoXZfB-xNjGM\",\n    authDomain: \"linkedin-app-ab3f7.firebaseapp.com\",\n    projectId: \"linkedin-app-ab3f7\",\n    storageBucket: \"linkedin-app-ab3f7.appspot.com\",\n    messagingSenderId: \"500406774202\",\n    appId: \"1:500406774202:web:3ec23ff86c08ae1c49d583\",\n    measurementId: \"G-ZN6ML4CFSJ\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@mui/icons-material/Search';\nimport HeaderOption from './HeaderOption';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\nimport BusinessCenterIcon from '@mui/icons-material/BusinessCenter';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { useDispatch } from 'react-redux';\nimport { auth } from './firebase';\nimport { logout } from './features/userSlice';\n\nfunction Header() {\n\n    const dispatch = useDispatch();\n\n    const logOutOfApp = () => {\n      dispatch(logout())\n      auth.signOut();\n    }\n    \n    return (\n        <div className=\"header\">\n\n\n\n            <div className=\"header__left\">\n              <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/LinkedIn_logo_initials.png/600px-LinkedIn_logo_initials.png\" alt=\"\"/>\n\n              <div className=\"header__search\">\n                  \n                  <SearchIcon />\n                  \n                  <input placeholder='Search' type=\"text\"/>\n\n              </div>\n            </div>\n\n            <div className=\"header__right\">\n                <HeaderOption Icon={HomeIcon} title=\"Home\" />\n                <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\"/>\n                <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\"/>\n                <HeaderOption Icon={ChatIcon} title=\"Messaging\"/>\n                <HeaderOption Icon={NotificationsIcon} title=\"Notifications\"/>\n                <HeaderOption avatar={true} title=\"Me\" onClick={logOutOfApp}/>\n            </div>\n\n\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './Sidebar.css'\nimport {Avatar} from '@mui/material'\nimport { selectUser } from './features/userSlice'\nimport { useSelector } from 'react-redux'\n\nfunction Sidebar() {\n    const user = useSelector(selectUser)\n\n    const recentItems = (topic) => (\n        <div className='sidebar__recentItem'>\n            <span className='sidebar__hash'>#</span>\n            <p>{topic}</p>\n        </div>\n    )\n     \n    return (\n        <div className='sidebar'>\n            <div className='sidebar__top'>\n                <img src='https://cdn6.f-cdn.com/contestentries/1301217/27758306/5acbe984b11d9_thumb900.jpg' alt='' />\n                <Avatar src={user.photoUrl} className='sidebar__avatar'>{user.email[0]}</Avatar>\n                <h2>{user.displayName}</h2>\n                <h4>{user.email}</h4>\n            </div>\n\n            <div className='sidebar__stats'>\n                <div className='sidebar__stat'>\n                  <p>Who viewed you</p>\n                  <p className='sidebar__statNumber'>3434</p>\n                </div>\n                <div className='sidebar__stat'>\n                  <p>Views on posts</p>\n                  <p className='sidebar__statNumber'>3323</p>\n                </div>\n            </div>\n\n            <div className='sidebar__bottom'>\n                <p>Recent</p>\n                {recentItems('reactjs')}\n                {recentItems('programming')}\n                {recentItems('developer')}\n                {recentItems('coding')}\n                {recentItems('design')}\n                {recentItems('engineering')}\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './InputOption.css'\n\nfunction InputOption({Icon, color, title}) {\n    return (\n        <div className='inputOption'>\n            <Icon style={{color: color}}/>\n            <h4>{title}</h4>\n        </div>\n    )\n}\n\nexport default InputOption\n","import React, { forwardRef } from 'react'\nimport './Post.css'\nimport {Avatar} from '@mui/material'\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport ShareIcon from '@mui/icons-material/Share';\nimport SendIcon from '@mui/icons-material/Send';\nimport InputOption from './InputOption'\n\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\n    return (\n        <div ref={ref} className='post'>\n            <div className='post__header'>\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\n                <div className='post__info'>\n                    <h2>{name}</h2>\n                    <p>{description}</p>\n                </div>\n            </div>\n\n            <div className='post__body'>\n                <p>{message}</p>\n            </div>\n\n            <div className='post__buttons'>\n                <InputOption Icon={ThumbUpAltIcon} title='Like' color='gray' />\n                <InputOption Icon={ChatBubbleOutlineIcon} title='Chat' color='gray' />\n                <InputOption Icon={ShareIcon} title='Share' color='gray' />\n                <InputOption Icon={SendIcon} title='Send' color='gray' />\n\n            </div>\n        </div>\n    )\n})\n\nexport default Post\n","import React, {useEffect, useState}from 'react'\nimport './Feed.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport InputOption from './InputOption'\nimport ImageIcon from '@mui/icons-material/Image';\nimport SubscriptionsIcon from '@mui/icons-material/Subscriptions';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport CalendarViewDayIcon from '@mui/icons-material/CalendarViewDay';\nimport Post from './Post'\nimport { db } from './firebase'\nimport firebase from 'firebase'\nimport { nanoid } from 'nanoid'\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport FlipMove from 'react-flip-move'\n\nfunction Feed() {    \n    const user = useSelector(selectUser);\n\n    const [input, setInput] = useState(\"\");\n    \n    const [posts, setPosts] = useState([ ]);\n\n\n    // useEffect(() => {\n    //     db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    //         setPosts(snapshot.docs.map(doc => doc.data()))\n    //     })\n    // }, [])\n\n    useEffect(() => {\n        db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n          setPosts(snapshot.docs.map(doc => (\n            {\n              id: doc.id,\n              data: doc.data(),\n            }\n          )))\n        ))\n      }, [])\n\n    const sendPost = (e) => {\n        e.preventDefault();\n\n        db.collection('posts').add({\n            id: nanoid(),\n            name: user.displayName,\n            description: user.email,\n            message: input,\n            photoUrl: user.photoUrl || \"\",\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n       \n        setInput(\"\")\n    }\n\n    \n    return (\n        <div className=\"feed\">\n            <div className=\"feed__inputContainer\">\n                <div className=\"feed__input\">\n                    <CreateIcon />\n                    <form >\n                        <input defaultValue={input} onChange={e => setInput(e.target.value)} type='text'/>\n                        <button onClick={sendPost} type='submit'>Send</button>\n                    </form>\n                </div>\n                <div className='feed__inputOptions'>\n                    <InputOption Icon={ImageIcon} title='Photo' color='#70b5f9'/>\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color='#e7a33e'/>\n                    <InputOption Icon={EventNoteIcon} title='Event' color='#c0cbcd'/>\n                    <InputOption Icon={CalendarViewDayIcon} title='Write Article' color='#7fc15e'/>\n\n                </div>\n            </div>\n            <FlipMove>\n              {posts.map(({ id, data: { name, description, message, photoUrl}}) => (\n                <Post \n                    key={id}\n                    name={name}\n                    description={description}\n                    message={message}\n                    photoUrl={photoUrl}\n                />\n              ))}\n            </FlipMove>\n            \n            {/* <FlipMove>\n            {posts.map((retreive) => {\n                return(\n                    <Post \n                     key={retreive.id}\n                     name={retreive.name}  \n                     description={retreive.description}\n                     message={retreive.message}\n                     photoUrl=''\n                    \n                    />\n                )\n            })}\n            </FlipMove> */}\n        </div>\n    )\n}\n\nexport default Feed\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { login } from './features/userSlice';\nimport { auth } from './firebase'\nimport './Login.css'\n\nfunction Login() {\n    const [email, setEmail] =useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [profilePic,  setProfilePic] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const loginToApp = (e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n        .then(userAuth => {\n            dispatch(login({\n                email: userAuth.email,\n                uid: userAuth.uid,\n                displayName: userAuth.displayName,\n                photoUrl: userAuth.photoUrl,\n                \n            }))\n        }).catch((error) => alert(error));\n    }\n\n    const register = () => {\n        if(!name) {\n            return alert('Please enter your full name')\n        }\n\n        auth.createUserWithEmailAndPassword(email, password)\n        .then((userAuth) => {\n            userAuth.user.updateProfile({\n                displayName: name,\n                photoURL: profilePic\n            })\n            \n            .then(() => {\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoUrl: profilePic\n                }))\n            })\n        }).catch((error) => alert(error))\n    }\n    \n    return (\n        <div className='login'>\n            <img src='https://pngimg.com/uploads/linkedIn/linkedIn_PNG10.png' alt=''/>\n        \n           <form>\n               <input value={name} onChange={e => setName(e.target.value)}  placeholder='full name (required if registered)' type='text'/>\n               <input value={profilePic} onChange={e => setProfilePic(e.target.value)} placeholder='Profile pic URL (optional)' type='text'/>\n               <input value={email} onChange={e => setEmail(e.target.value)} placeholder='Email' type='email'/>\n               <input value={password} onChange={e => setPassword(e.target.value)}  placeholder='Password' type='password'/>\n\n               <button type='submit' onClick={loginToApp}>Sign In</button>\n           </form>\n\n           <p>Not a member?{\" \"}\n               <span className='login__register' onClick={register}>Register Now</span>\n           </p>\n        </div>\n        \n    )\n}\n\nexport default Login\n","import React from 'react';\nimport './Widgets.css';\nimport InfoIcon from '@mui/icons-material/Info';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\n\nfunction Widgets() {\n  const newsArticle = (heading, subtitle) => (\n    <div className=\"widget_article\">\n      <div className=\"widgets_articleleft\">\n        <FiberManualRecordIcon />\n      </div>\n\n      <div className=\"widgets_articleright\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"widgets\">\n      <div className=\"widget_header\">\n        <h2>LinkedIn News</h2>\n        <InfoIcon />\n      </div>\n\n      {newsArticle(\"Coronavirus: Lagos updates\", \"Tops news - 324 readers\")}\n      {newsArticle(\"Bitcoin hits new high\", \"Tops news - 2,324 readers\")}\n    </div>\n  )\n}\n\nexport default Widgets\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { login, logout, selectUser } from \"./features/userSlice\"\nimport Header from \"./Header\";\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport { auth } from './firebase';\nimport Login from './Login';\nimport Widgets from './Widgets'\n\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //user is logged in\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoUrl\n        }))\n      } else {\n        //user is logged out\n        dispatch(logout());\n      }\n    })\n  })\n  \n  return (\n    <div className=\"App\">\n      <div className='app'>\n        {/*Header*/}\n        <Header />\n\n        {!user ? <Login /> :(\n          <div className=\"app__body\">\n            <Sidebar />\n            <Feed />\n            <Widgets />\n          </div>\n        )}\n\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}